kind: Service
apiVersion: v1
metadata:
  name: landing-service
  namespace: production
spec:
  ports:
  - port: 80
    protocol: TCP
  #type: LoadBalancer
  selector:
    app: landing
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: landing-deployment
  namespace: production
spec:
  selector:
    matchLabels:
      app: landing
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: landing
    spec:
      containers:
      - name: landing
        image: farman17/dekkeng-landing
        ports:
        - containerPort: 80
        imagePullPolicy: "Always"

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: landing-ingress
  namespace: production
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    certmanager.k8s.io/acme-challenge-type: http01
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Forwarded-Proto https";
      more_set_headers "X-Forwarded-Port   443";
spec:
  rules:
  - host: landing.dailybugis.my.id
    http:
      paths:
      #- path: /
      - backend:
          serviceName: landing-service
          servicePort: 80
tls:
 - hosts:
    - landing.dailybugis.my.id
    secretName: letsencrypt-prod

---
apiVersion: certmanager.k8s.io/v1alpha1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: production
spec:
  acme:
    # The ACME server URL
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: ahmadfarman1701@gmail.com
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod-example
    # Enable the HTTP-01 challenge provider
    http01: {} 
